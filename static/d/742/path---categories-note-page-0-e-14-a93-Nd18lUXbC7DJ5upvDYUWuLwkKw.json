{"data":{"site":{"siteMetadata":{"title":"Mingjun Zhou's blog","author":"Mingjun Zhou","description":"personal blog"}}},"pageContext":{"posts":[{"internal":{"content":"\n\n# unicode nomalization\n## Canonical and Compatibility Equivalence\nhttp://www.unicode.org/reports/tr15/#Canon_Compat_Equivalence\n\n**Examples of Canonical Equivalence**\n\nSubtype | Examples\n------- | -----\nCombining sequence\t        | Ç\t↔\tC+◌̧\nOrdering of combining marks\t| q+◌̇+◌̣\t↔\tq+◌̣+◌̇\nHangul & conjoining jamo\t| 가\t↔\tᄀ +ᅡ\nSingleton equivalence\t    | Ω\t↔\tΩ\n\n**Examples of Compatibility Equivalence**       \n\nSubtype | Examples      \n------- | -----     \nFont variants               |\tℌ\t→\tH\nLinebreaking differences    |\t[NBSP]\t→\t[SPACE]\nPositional variant forms    |\tﻉ\t→\t‌ع‌\nCircled variants            | \t①\t→\t1\nWidth variants              | \tｶ\t→\tカ\nRotated variants            | \t︷\t→\t{\nSuperscripts/subscripts     |\ti⁹\t→\ti9\nSquared characters          |\t㌀\t→\tアパート\nFractions                   |\t¼\t→\t1/4\nOther                       |\tǆ\t→\tdž\n\n## Normalization Forms\n\nForm\t|   Description\n-- |  --\nNormalization Form D (NFD)\t    |Canonical Decomposition\nNormalization Form C (NFC)\t    |Canonical Decomposition,followed by Canonical Composition\nNormalization Form KD (NFKD)\t|Compatibility Decomposition\nNormalization Form KC (NFKC)\t|Compatibility Decomposition,followed by Canonical Composition\n\n \n# unicode charater category\nhttps://en.wikipedia.org/wiki/Unicode_character_property#General_Category\nhttp://www.fileformat.info/info/unicode/category/index.htm\n\nCode\tDescription\n[Cc]\tOther, Control\n[Cf]\tOther, Format\n[Cn]\tOther, Not Assigned (no characters in the file have this property)\n[Co]\tOther, Private Use\n[Cs]\tOther, Surrogate\n[LC]\tLetter, Cased\n[Ll]\tLetter, Lowercase\n[Lm]\tLetter, Modifier\n[Lo]\tLetter, Other\n[Lt]\tLetter, Titlecase\n[Lu]\tLetter, Uppercase\n[Mc]\tMark, Spacing Combining\n[Me]\tMark, Enclosing\n[Mn]\tMark, Nonspacing\n[Nd]\tNumber, Decimal Digit\n[Nl]\tNumber, Letter\n[No]\tNumber, Other\n[Pc]\tPunctuation, Connector\n[Pd]\tPunctuation, Dash\n[Pe]\tPunctuation, Close\n[Pf]\tPunctuation, Final quote (may behave like Ps or Pe depending on usage)\n[Pi]\tPunctuation, Initial quote (may behave like Ps or Pe depending on usage)\n[Po]\tPunctuation, Other\n[Ps]\tPunctuation, Open\n[Sc]\tSymbol, Currency\n[Sk]\tSymbol, Modifier\n[Sm]\tSymbol, Math\n[So]\tSymbol, Other\n[Zl]\tSeparator, Line\n[Zp]\tSeparator, Paragraph\n[Zs]\tSeparator, Space\n\n# python code\n\n```python\nimport unicodedata\nall_letters = string.ascii_letters + \" .,;'\"\nn_letters = len(all_letters)\n# Turn a Unicode string to plain ASCII, thanks to http://stackoverflow.com/a/518232/2809427\ndef unicodeToAscii(s):\n    return ''.join(c for c in unicodedata.normalize('NFD', s) if unicodedata.category(c) != 'Mn' and c in all_letters)\n\n# show case\nstr = 'Abelló'\nprint([c for c in str])\nprint([c for c in unicodedata.normalize('NFD', str)])\nprint([c for c in unicodedata.normalize('NFD', str) if unicodedata.category(c)!= 'Mn'])\nprint([c for c in unicodedata.normalize('NFD', str) if unicodedata.category(c)!= 'Mn'  and c in all_letters])\n\n# result \n['A', 'b', 'e', 'l', 'l', 'ó']\n['A', 'b', 'e', 'l', 'l', 'o', '́']\n['A', 'b', 'e', 'l', 'l', 'o']\n['A', 'b', 'e', 'l', 'l', 'o']\n\n```"},"fields":{"fpath":"/note/unicode/","permalink":"/2018/09/06/unicode","category":"note"},"frontmatter":{"title":"Unicode","date":"2018-09-06","tags":null,"desc":null,"slug":null}},{"internal":{"content":"which foo >/dev/null\ncommand -v foo >/dev/null 2>&1\ntype foo >/dev/null 2>&1\nhash foo 2>/dev/null\n\nif [[ -n \"${commands[perlbrew]}\" ]] ; then\n  ...\nfi\n\n\nhttp://hyperpolyglot.org/unix-shells"},"fields":{"fpath":"/note/inside-shell/","permalink":"/2018/08/31/inside-shell","category":"note"},"frontmatter":{"title":"inside shell","date":"2018-08-31","tags":null,"desc":null,"slug":null}},{"internal":{"content":"\n# refs\nhttps://www.hostinger.com/tutorials/iptables-tutorial\n\nhttps://wiki.archlinux.org/index.php/iptables"},"fields":{"fpath":"/note/iptables/","permalink":"/2018/08/24/iptables","category":"note"},"frontmatter":{"title":"iptables","date":"2018-08-24","tags":null,"desc":null,"slug":null}},{"internal":{"content":"\n\n## refs\n[https://medium.com/@jonathan_hui/gan-gan-series-2d279f906e7b](https://medium.com/@jonathan_hui/gan-gan-series-2d279f906e7b)\n\n[https://www.datacamp.com/community/tutorials/generative-adversarial-networks](https://www.datacamp.com/community/tutorials/generative-adversarial-networks)\n\n## people\n[Jun-Yan Zhu](http://people.csail.mit.edu/junyanz/)"},"fields":{"fpath":"/note/gan/","permalink":"/2018/08/17/gan","category":"note"},"frontmatter":{"title":"GAN","date":"2018-08-17","tags":null,"desc":null,"slug":null}},{"internal":{"content":"\n## References\n### blogs\n* [Evolution of Object Detection and Localization Algorithms](https://towardsdatascience.com/evolution-of-object-detection-and-localization-algorithms-e241021d8bad)\n* [Review of Deep Learning Algorithms for Object Detection](https://medium.com/comet-app/review-of-deep-learning-algorithms-for-object-detection-c1f3d437b852)\n\n*[yolo v3](https://www.kdnuggets.com/2018/05/implement-yolo-v3-object-detector-pytorch-part-1.html)\n### papers\n* [You Only Look Once: Unified, Real-Time Object Detection](https://arxiv.org/pdf/1506.02640.pdf)\n* [YOLO9000: Better, Faster, Stronger](https://arxiv.org/pdf/1612.08242.pdf)  \n* [Convolutional Neural Networks by Andrew Ng (deeplearning.ai)](https://www.coursera.org/learn/convolutional-neural-networks)\n\n## Problems\n1. Image Classification    \n2. Object classification and localization  \n3. Multiple objects detection and localization\n\n\n\n\n"},"fields":{"fpath":"/note/object-detection-and-localization-algorithms/","permalink":"/2018/08/15/object-detection-and-localization","category":"note"},"frontmatter":{"title":"Object Detection and Localization","date":"2018-08-15","tags":null,"desc":null,"slug":null}},{"internal":{"content":"\n## latest\n\n[srnn](https://github.com/zepingyu0512/srnn)\n\n## Datasets\n\n### image\n* [PASCAL Visual Object Classification (PASCAL VOC) dataset](http://host.robots.ox.ac.uk/pascal/VOC/)\n* [ImageNet](http://www.image-net.org/)\n* [COCO](http://cocodataset.org/#home)\n\n### nlp\n\n[GloVe](https://nlp.stanford.edu/projects/glove/ )\n\n Yelp "},"fields":{"fpath":"/note/awesome-ai/","permalink":"/2018/08/15/awesome-ai","category":"note"},"frontmatter":{"title":"Awesome AI","date":"2018-08-15","tags":null,"desc":null,"slug":null}}],"category":"note","pagesSum":1,"page":0}}
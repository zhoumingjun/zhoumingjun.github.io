{"data":{"site":{"siteMetadata":{"title":"Mingjun Zhou's blog","author":"Mingjun Zhou","description":"personal blog"}}},"pageContext":{"posts":[{"internal":{"content":"\n# Overview\nTo run tensorflow/pytorch with gpu, I need to install cuda and cudnn.\nIt's really tricky, but finally I found the method. \n\nThe secret is   \n* install the graphics driver from a PPA \n* install the toolkit from the run file\n\n# packages\nThe following packages need to be installed.\n* nvidia graphics driver     \n* cuda 9.2  \n* cudnn 7.2\n\nFor nvidia graphics driver, there are two sources:\n1. raphics-drivers/ppa:     \nhttps://launchpad.net/~graphics-drivers/+archive/ubuntu/ppa         \nthe package is nvidia-driver-396\n\n2. nvidia official repo\nhttps://developer.download.nvidia.com/compute/cuda/repos/ubuntu1710/x86_64/cuda-drivers_396.44-1_amd64.deb  \nthe package is cuda-drivers\n\nIn fact the nvidia cuda-drivers is for ubuntu 17.10, and there are no official nvidia repo for ubuntu 18.04 currently.  \nHere we need to select option 1, I have try option2, but there are conflict with other packages.    \nI install the cuda-drivers with \"--force-overwrite\", but gdm can't be launched normally.\n\nFor cuda 9.2, it can be download directly from nvidia website.\n\nFor cudnn7.2, **it can be download from nvidia machine-learning repo without login**\n\n\n# installation steps\n\ninstall nvidia graphics driver  \n\n```bash \nsudo add-apt-repository ppa:graphics-drivers/ppa\nsudo apt update\nsudo apt-get install nvidia-driver-396\n```\n\ninstall cuda    \n\n```bash\n# dowload installer\naria2c https://developer.nvidia.com/compute/cuda/9.2/Prod2/local_installers/cuda_9.2.148_396.37_linux \n\naria2c https://developer.nvidia.com/compute/cuda/9.2/Prod2/patches/1/cuda_9.2.148.1_linux  \n\n# install cuda9.2 and patch\nchmod +x cuda*\n\nsudo ./cuda_9.2.148_396.37_linux.run --verbose --silent --toolkit --override\n\nsudo ./cuda_9.2.148.1_linux.run --silent --accept-eula\n\n# add to ld\nsudo echo \"/usr/local/cuda-9.2/lib64\" >> /etc/ld.so.conf\nsudo ldconfig\n```\n\ninstall cudnn   \n```bash\n#download packages\naria2c https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64/libcudnn7_7.2.1.38-1+cuda9.2_amd64.deb\n\naria2c https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64/libcudnn7-dev_7.2.1.38-1+cuda9.2_amd64.deb    \n\n# install\nsudo dpkg -i libcudnn7_7.2.1.38-1+cuda9.2_amd64.deb\nsudo dpkg -i libcudnn7-dev_7.2.1.38-1+cuda9.2_amd64.deb\n```\n"},"fields":{"slug":"/post/2018-08-23-install-cuda-and-cudnn-on-ubuntu18.04/","category":"post"},"frontmatter":{"title":"Install cuda9.2 and cudnn7.2 on ubuntu 18.04","date":"2018-08-23T15:01:49Z","tags":"ml"}},{"internal":{"content":"\nI decided to migrate my blog from hugo to gatsby.\nGatsby is based on react and misc plugins, and it works in the same way as normal web development. \nBut there are still some works to do, such as mathjax support.\n\n\n\n\n"},"fields":{"slug":"/post/2018-08-14-migrate-from-hugo-to-gatsby/","category":"post"},"frontmatter":{"title":"Migrate from Hugo to Gatsby","date":"2018-08-14T10:52:17Z","tags":"misc"}},{"internal":{"content":"\n# MathJax support\n## configuration\n[Hugo doc](https://gohugo.io/tutorials/mathjax/)    \n[MathJax doc](http://docs.mathjax.org/en/latest/configuration.html?#using-plain-javascript)     \n\n``` \n<!-- LaTeX math rendering -->\n{{ if  .Params.math   }}\n<script type=\"text/javascript\">\n    window.MathJax = {\n        tex2jax: {\n            inlineMath: [['$','$'], ['\\\\(','\\\\)']],\n            displayMath: [['$$','$$'], ['\\[','\\]']],\n            processEscapes: true,\n            processEnvironments: true,\n            skipTags: ['script', 'noscript', 'style', 'textarea', 'pre'],\n            TeX: { equationNumbers: { autoNumber: \"AMS\" },\n                extensions: [\"AMSmath.js\", \"AMSsymbols.js\", \"color.js\"] }\n        },\n        AuthorInit: function () {\n            MathJax.Hub.Register.StartupHook(\"Begin\",function () {\n                MathJax.Hub.Queue(function() {\n                    var all = MathJax.Hub.getAllJax(), i;\n                    for(i = 0; i < all.length; i += 1) {\n                        all[i].SourceElement().parentNode.className += ' has-jax';\n                    }\n                })\n            });\n        }\n    };\n</script>\n<script  type=\"text/javascript\"\n    src=\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\">\n</script>\n{{ end }}\n```\n\n## example \n**code**    \n```\n    `$ v_\\pi(s) = \\sum_{a \\in \\mathcal{A}} \\pi(a|s) q_\\pi(s,a)  $`\n```\n**result**  \n`$ v_\\pi(s) = \\sum_{a \\in \\mathcal{A}} \\pi(a|s) q_\\pi(s,a)  $`\n\n# graphviz support\n\n## configuration\n```html \n<!-- graphviz renderring -->\n{{ if  .Params.viz}}\n<script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/viz.js/1.7.1/viz.js\"> </script>\n<script type=\"text/javascript\">\n(function(){\n    var vizPrefix = \"language-viz-\";\n    Array.prototype.forEach.call(document.querySelectorAll(\"[class^=\" + vizPrefix + \"]\"), function(x){\n        var engine;\n        x.getAttribute(\"class\").split(\" \").forEach(function(cls){\n            if (cls.startsWith(vizPrefix)) {\n                engine = cls.substr(vizPrefix.length);\n            }\n        });\n        var image = new DOMParser().parseFromString(Viz(x.innerText, {format:\"svg\", engine:engine}), \"image/svg+xml\");\n        x.parentNode.insertBefore(image.documentElement, x);\n        x.style.display = 'none'\n        x.parentNode.style.backgroundColor = \"white\"\n    });\n})();\n</script>\n{{ end }}\n```\n\n## example\n**code**        \n```\n    ```viz-dot\n    digraph g { \n    node[shape=\"circle\" , label=\"\", width=0.2, height=0.2]\n    l1[xlabel=\"v\\(s\\)\"]\n    l21[xlabel=\"a\", width=0.1, height=0.1 , style=filled]\n    l22[width=0.1, height=0.1, style=filled]\n    l31[xlabel=\"v\\(s'\\)\"]\n\n    l1 -> l21\n    l1 -> l22\n    l21 -> l31 [xlabel=\"r\"]\n    l21 -> l32\n    l22 -> l33\n    l22 -> l34\n    }\n    ```\n```\n**result**   \n```viz-dot\ndigraph g { \n   node[shape=\"circle\" , label=\"\", width=0.2, height=0.2]\n   l1[xlabel=\"v\\(s\\)\"]\n   l21[xlabel=\"a\", width=0.1, height=0.1 , style=filled]\n   l22[width=0.1, height=0.1, style=filled]\n   l31[xlabel=\"v\\(s'\\)\"]\n\n   l1 -> l21\n   l1 -> l22\n   l21 -> l31 [xlabel=\"r\"]\n   l21 -> l32\n   l22 -> l33\n   l22 -> l34\n}\n```"},"fields":{"slug":"/post/2017-03-10-using-mathjax-viz-with-hugo/","category":"post"},"frontmatter":{"title":"Using MathJax and Graphviz with Hugo","date":"2017-03-10T11:40:12+08:00","tags":"math"}},{"internal":{"content":"https://medium.com/@teddyking/namespaces-in-go-basics-e3f0fc1ff69a\n\n\n* view docker container's namespace \n\n```bash\npid=`docker inspect -f '{{.State.Pid}}' $container_id`\nln -s /proc/$pid/ns/net /var/run/netns/$container_id\n```"},"fields":{"slug":"/knowledgebase/linux/namespace/","category":"knowledgebase"},"frontmatter":{"title":"First Post","date":"2017-03-06T16:03:35+08:00","tags":"misc"}},{"internal":{"content":"https://www.slideshare.net/ThomasGraf5/linux-networking-explained\n\ndocker network\n\nhttps://success.docker.com/article/networking"},"fields":{"slug":"/knowledgebase/networking/","category":"knowledgebase"},"frontmatter":{"title":"First Post","date":"2017-03-06T16:03:35+08:00","tags":"misc"}},{"internal":{"content":"\nI build this site to boost my daily work. \n\nThis website is powered by [Academic](https://github.com/gcushen/hugo-academic), [Hugo](https://gohugo.io), and [GitHub Pages](https://github.com/).   \n\n\n\n"},"fields":{"slug":"/post/2017-03-06-first-post/","category":"post"},"frontmatter":{"title":"First Post","date":"2017-03-06T16:03:35+08:00","tags":"misc"}},{"internal":{"content":"\n* docker int details    \nhttps://docker-k8s-lab.readthedocs.io/en/latest/index.html\n\n* Container Namespaces â€“ Deep Dive into Container Networking    \nhttps://platform9.com/blog/container-namespaces-deep-dive-container-networking/\n\n```bash\ncontainer_name=xxx\npid=$(docker inspect -f '{{.State.Pid}}' \"$container_name\")\nsudo mkdir -p /var/run/netns\nsudo ln -sf /proc/$pid/ns/net \"/var/run/netns/$container_name\"\nsudo ip netns\nsudo ip netns exec \"$container_name\" ip a\n```\n\n* netadmin\nDocker containers do not have full privileges by default. Try adding this to the docker run command:\n\n\n  --cap-add=NET_ADMIN\n"},"fields":{"slug":"/knowledgebase/visualization/docker/deep/","category":"knowledgebase"},"frontmatter":{"title":"First Post","date":"2017-03-06T16:03:35+08:00","tags":"misc"}}],"tag":"m","pagesSum":1,"page":0}}
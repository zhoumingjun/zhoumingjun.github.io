{"data":{"site":{"siteMetadata":{"title":"Mingjun Zhou's blog","author":"Mingjun Zhou","sourceUrl":"https://github.com/zhoumingjun/zhoumingjun.github.io/blob/source/","siteUrl":"https://zhoumingjun.github.io","disqusShortname":"zhoumingjun"}},"markdownRemark":{"id":"6bb688c2-0f12-5575-a488-60002998e158 >>> MarkdownRemark","excerpt":"python3 star operator map zip lambda NDArray Indexing https://docs.scipy.org/doc/numpy/user/basics.indexing.html pytorch RNN Refer to  https…","html":"<h1>python3</h1>\n<h2>star operator</h2>\n<h2>map zip lambda</h2>\n<h2>NDArray Indexing</h2>\n<p><a href=\"https://docs.scipy.org/doc/numpy/user/basics.indexing.html\">https://docs.scipy.org/doc/numpy/user/basics.indexing.html</a></p>\n<h1>pytorch</h1>\n<h2>RNN</h2>\n<p>Refer to <a href=\"https://pytorch.org/docs/stable/nn.html#lstm\">https://pytorch.org/docs/stable/nn.html#lstm</a></p>\n<p>Andrej Karpathy’s diagram shows the different pattern in RNN<br>\n<img src=\"./rnn.jpg\" alt=\"RNN\"></p>\n<h3>Sequence</h3>\n<p>The following code show the concept about sequence.\ntorch.nn.LSTM can handle the sequence automatically, but we can feed it step-by-step also.  </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> torch\n\ninput_size <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\nhidden_size <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\nnum_layers <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n<span class=\"token comment\"># model</span>\nmodel <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>nn<span class=\"token punctuation\">.</span>LSTM<span class=\"token punctuation\">(</span>input_size<span class=\"token punctuation\">,</span> hidden_size<span class=\"token punctuation\">,</span> num_layers<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># data</span>\n<span class=\"token builtin\">input</span> <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># option1: sequence</span>\noutput<span class=\"token punctuation\">,</span> hidden <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># option2: step by step</span>\ninput_0 <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\ninput_1 <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\ninput_2 <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\ninput_3 <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\noutput_0<span class=\"token punctuation\">,</span> hidden_0 <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>input_0<span class=\"token punctuation\">)</span>\noutput_1<span class=\"token punctuation\">,</span> hidden_1 <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>input_1<span class=\"token punctuation\">,</span> hidden_0<span class=\"token punctuation\">)</span>\noutput_2<span class=\"token punctuation\">,</span> hidden_2 <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>input_2<span class=\"token punctuation\">,</span> hidden_1<span class=\"token punctuation\">)</span>\noutput_3<span class=\"token punctuation\">,</span> hidden_3 <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>input_3<span class=\"token punctuation\">,</span> hidden_2<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>hidden<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>hidden_0<span class=\"token punctuation\">,</span> hidden_1<span class=\"token punctuation\">,</span> hidden_2<span class=\"token punctuation\">,</span>hidden_3<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>output_0<span class=\"token punctuation\">,</span> output_1<span class=\"token punctuation\">,</span> output_2<span class=\"token punctuation\">,</span>output_3<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># compare option1 &amp; option2</span>\n<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>output_0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> hidden_size<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>output_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> hidden_size<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>output_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> hidden_size<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>output_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> hidden_size<span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"\nTrue\nTrue\nTrue\nTrue\n\"\"\"</span>\n<span class=\"token comment\"># relation between hidden &amp; output</span>\n<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>hidden_0<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> hidden_size<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>hidden_1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> hidden_size<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>hidden_2<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> hidden_size<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>hidden_3<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> hidden_size<span class=\"token punctuation\">)</span>\n<span class=\"token triple-quoted-string string\">\"\"\"\nTrue\nTrue\nTrue\nTrue\n\"\"\"</span></code></pre></div>\n<p>As the result of the above code shown   </p>\n<ol>\n<li>the output contains all outputs of each iteration.</li>\n<li>the output is the collection of hidden state of each iteration</li>\n<li>from the last layer of the LSTM (in much layer network, see the official document)</li>\n</ol>\n<h3>Batch Processing</h3>\n<h3>Batch processing with variable length sequences</h3>\n<p><a href=\"https://djosix.github.io/Variable-Sequence-Lengths-for-PyTorch-RNNs/\">https://djosix.github.io/Variable-Sequence-Lengths-for-PyTorch-RNNs/</a></p>\n<h1>refs</h1>\n<p><a href=\"https://www.pythonlikeyoumeanit.com/intro.html\">https://www.pythonlikeyoumeanit.com/intro.html</a>\n<a href=\"https://djosix.github.io/Variable-Sequence-Lengths-for-PyTorch-RNNs/\">https://djosix.github.io/Variable-Sequence-Lengths-for-PyTorch-RNNs/</a>\n<a href=\"https://medium.com/understand-the-python/understanding-the-asterisk-of-python-8b9daaa4a558\">https://medium.com/understand-the-python/understanding-the-asterisk-of-python-8b9daaa4a558</a></p>","fileAbsolutePath":"/Users/zhoumingjun/github.com/zhoumingjun/zhoumingjun.github.io/content/series/pytorch/rnn/1-Fundamental/index.md","fields":{"slug":"/series/pytorch/rnn/1-Fundamental/","category":"series"},"frontmatter":{"title":"Fundamental","date":"September 07, 2018"}}},"pageContext":{"slug":"/series/pytorch/rnn/1-Fundamental/","toc":"{\"post\":{\"internal\":{\"content\":\"---\\ntitle: \\\"pytorch\\\"\\ndate: \\\"2018-09-07T10:16:47Z\\\"\\ntags: [\\\"machine learning\\\",\\\"pytorch\\\"]\\n---\\n\\nPytorch\"},\"fields\":{\"slug\":\"/series/pytorch/\",\"category\":\"series\"},\"frontmatter\":{\"title\":\"pytorch\",\"date\":\"2018-09-07T10:16:47Z\",\"tags\":[\"machine learning\",\"pytorch\"],\"desc\":null}},\"children\":{\"rnn\":{\"post\":{\"internal\":{\"content\":\"---\\ntitle: \\\"RNN\\\"\\ndate: \\\"2018-09-07T10:16:47Z\\\"\\ntags: [\\\"machine learning\\\",\\\"pytorch\\\", \\\"rnn\\\"]\\n---\\n\\nRNN\\n\\ntodo:\\nseq2seq:\\nhttps://www.microsoft.com/en-us/cognitive-toolkit/blog/2016/11/sequence-to-sequence-deep-recurrent-neural-networks-in-cntk-part-1/\"},\"fields\":{\"slug\":\"/series/pytorch/rnn/\",\"category\":\"series\"},\"frontmatter\":{\"title\":\"RNN\",\"date\":\"2018-09-07T10:16:47Z\",\"tags\":[\"machine learning\",\"pytorch\",\"rnn\"],\"desc\":null}},\"children\":{\"1-Fundamental\":{\"post\":{\"internal\":{\"content\":\"---\\ntitle: \\\"Fundamental\\\"\\ndate: \\\"2018-09-07T10:16:47Z\\\"\\ntags: [\\\"machine learning\\\",\\\"pytorch\\\", \\\"rnn\\\"]\\n---\\n\\n\\n# python3\\n\\n## star operator\\n\\n## map zip lambda\\n \\n## NDArray Indexing\\nhttps://docs.scipy.org/doc/numpy/user/basics.indexing.html\\n\\n\\n# pytorch\\n\\n\\n## RNN\\nRefer to https://pytorch.org/docs/stable/nn.html#lstm\\n\\nAndrej Karpathy’s diagram shows the different pattern in RNN        \\n![RNN](./rnn.jpg)\\n\\n### Sequence \\nThe following code show the concept about sequence. \\ntorch.nn.LSTM can handle the sequence automatically, but we can feed it step-by-step also.  \\n\\n```python\\nimport torch\\n\\ninput_size = 10\\nhidden_size = 20\\nnum_layers = 1\\n\\n# model\\nmodel = torch.nn.LSTM(input_size, hidden_size, num_layers)\\n\\n# data\\ninput = torch.ones(4, 1, 10)\\n\\n# option1: sequence\\noutput, hidden = model(input)\\n\\n# option2: step by step\\ninput_0 = input[0,:,:].view(1,1,10)\\ninput_1 = input[1,:,:].view(1,1,10)\\ninput_2 = input[2,:,:].view(1,1,10)\\ninput_3 = input[3,:,:].view(1,1,10)\\n\\noutput_0, hidden_0 = model(input_0)\\noutput_1, hidden_1 = model(input_1, hidden_0)\\noutput_2, hidden_2 = model(input_2, hidden_1)\\noutput_3, hidden_3 = model(input_3, hidden_2)\\n\\n\\nprint(hidden)\\nprint(output)\\nprint(hidden_0, hidden_1, hidden_2,hidden_3)\\nprint(output_0, output_1, output_2,output_3)\\n\\n\\n# compare option1 & option2\\nprint ((output[0]==output_0).sum().item() == hidden_size)\\nprint ((output[1]==output_1).sum().item() == hidden_size)\\nprint ((output[2]==output_2).sum().item() == hidden_size)\\nprint ((output[3]==output_3).sum().item() == hidden_size)\\n\\n\\\"\\\"\\\"\\nTrue\\nTrue\\nTrue\\nTrue\\n\\\"\\\"\\\"\\n# relation between hidden & output\\nprint ((output[0]==hidden_0[0][-1]).sum().item() == hidden_size)\\nprint ((output[1]==hidden_1[0][-1]).sum().item() == hidden_size)\\nprint ((output[2]==hidden_2[0][-1]).sum().item() == hidden_size)\\nprint ((output[3]==hidden_3[0][-1]).sum().item() == hidden_size)\\n\\\"\\\"\\\"\\nTrue\\nTrue\\nTrue\\nTrue\\n\\\"\\\"\\\"\\n```\\n\\nAs the result of the above code shown   \\n1. the output contains all outputs of each iteration.\\n2. the output is the collection of hidden state of each iteration\\n3. from the last layer of the LSTM (in much layer network, see the official document)\\n\\n\\n\\n\\n### Batch Processing\\n\\n### Batch processing with variable length sequences\\n \\n\\n\\n\\nhttps://djosix.github.io/Variable-Sequence-Lengths-for-PyTorch-RNNs/\\n\\n# refs\\n\\nhttps://www.pythonlikeyoumeanit.com/intro.html\\n https://djosix.github.io/Variable-Sequence-Lengths-for-PyTorch-RNNs/\\n https://medium.com/understand-the-python/understanding-the-asterisk-of-python-8b9daaa4a558\"},\"fields\":{\"slug\":\"/series/pytorch/rnn/1-Fundamental/\",\"category\":\"series\"},\"frontmatter\":{\"title\":\"Fundamental\",\"date\":\"2018-09-07T10:16:47Z\",\"tags\":[\"machine learning\",\"pytorch\",\"rnn\"],\"desc\":null}}}}}}}","next":null,"prev":{"internal":{"content":"---\ntitle: \"RNN\"\ndate: \"2018-09-07T10:16:47Z\"\ntags: [\"machine learning\",\"pytorch\", \"rnn\"]\n---\n\nRNN\n\ntodo:\nseq2seq:\nhttps://www.microsoft.com/en-us/cognitive-toolkit/blog/2016/11/sequence-to-sequence-deep-recurrent-neural-networks-in-cntk-part-1/"},"fields":{"slug":"/series/pytorch/rnn/","category":"series"},"frontmatter":{"title":"RNN","date":"2018-09-07T10:16:47Z","tags":["machine learning","pytorch","rnn"],"desc":null}}}}
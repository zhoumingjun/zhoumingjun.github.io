{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header-footer-anchor.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","lodash_get__WEBPACK_IMPORTED_MODULE_4___default","siteDescription","excerpt","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_6__","location","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","lang","meta","name","content","title","frontmatter","className","Object","emotion__WEBPACK_IMPORTED_MODULE_5__","css","_utils_typography__WEBPACK_IMPORTED_MODULE_7__","b","date","dangerouslySetInnerHTML","__html","html","style","marginBottom","display","flexWrap","justifyContent","listStyle","padding","gatsby__WEBPACK_IMPORTED_MODULE_3__","Link","to","fields","slug","rel","t","Component","__webpack_exports__","default","h","pageQuery","StaticQueryContext","react__WEBPACK_IMPORTED_MODULE_0___default","createContext","StaticQuery","Consumer","staticQueryData","query","children","graphql","Error","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","object","string","isRequired","func","m","module","exports","__webpack_require__","typography_theme_github__WEBPACK_IMPORTED_MODULE_2___default","plugins","typography_plugin_code__WEBPACK_IMPORTED_MODULE_1___default","typography","typography__WEBPACK_IMPORTED_MODULE_0___default","rhythm","scale","ProdPageRenderer","_ref","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","shape","u","262","e","site","siteMetadata","description","266","n","r","i","o","c","l","s","header_footer_anchor","react_emotion_dist_index_esm","target","inline","theme","marginLeft","spacing","textDecoration","color","textColor","transition",":hover","accentColor","Header","headerHeight","H1","margin","Small","Nav","flexDirection","textTransform","header","react_default","href","Footer","height","textAlign","opacity","alignItems","P","_ref2","spacingPx","footer","v","maxWidthPx","minWidthPx","specialColor","index_esm","injectGlobal","gatsby_browser_entry","dist_index_esm","Helmet_default","charSet","httpEquiv","_3978990474"],"mappings":"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","file":"component---src-templates-blog-post-js-7656364b21ad996329fb.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport {Link} from 'gatsby';\nimport get from 'lodash/get';\nimport {css} from 'emotion';\nimport Layout from '../components/layout';\nimport {rhythm, scale} from '../utils/typography';\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title');\n    const siteDescription = post.excerpt;\n    const {previous, next} = this.props.pageContext;\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet\n          htmlAttributes={{lang: 'en'}}\n          meta={[{name: 'description', content: siteDescription}]}\n          title={`${post.frontmatter.title} | ${siteTitle}`}\n        />\n        <h1\n          className={css`\n            text-align: center;\n          `}>\n          {post.frontmatter.title}\n        </h1>\n        <p\n          className={css`\n            text-align: right;\n            margin-bottom: ${rhythm(1)};\n            margin-top: ${rhythm(-1)};\n            display: block;\n            ${scale(-1 / 5)};\n          `}>\n          {post.frontmatter.date}\n        </p>\n        <div dangerouslySetInnerHTML={{__html: post.html}} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n\n        <ul\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-between',\n            listStyle: 'none',\n            padding: 0,\n          }}>\n          {previous && (\n            <li>\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            </li>\n          )}\n\n          {next && (\n            <li>\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            </li>\n          )}\n        </ul>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: {slug: {eq: $slug}}) {\n      id\n      excerpt\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.NODE_ENV !== `production`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography';\nimport CodePlugin from 'typography-plugin-code';\n\nimport githubTheme from 'typography-theme-github';\n\ngithubTheme.plugins = [new CodePlugin()];\nconst typography = new Typography(githubTheme);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== 'production') {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import styled from 'react-emotion';\n\nexport default styled.a(({inline, theme}) => ({\n  marginLeft: inline ? null : theme.spacing,\n  textDecoration: 'none',\n  color: theme.textColor,\n  transition: 'color 250ms linear',\n  ':hover': {\n    color: theme.accentColor,\n  },\n}));\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from 'react';\nimport styled from 'react-emotion';\nimport A from './header-footer-anchor';\nimport {withTheme} from 'emotion-theming';\n\nconst Header = styled.header`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  height: ${props => props.theme.headerHeight};\n  color: ${props => props.theme.textColor};\n`;\n\nconst H1 = styled.h1(({theme}) => ({\n  margin: 0,\n}));\n\nconst Small = styled.small`\n  font-size: 75%;\n  opacity: 0.35;\n}`;\n\nconst Nav = styled.nav({\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'space-between',\n  textTransform: 'uppercase',\n});\n\nconst SiteHeader = () => (\n  <Header>\n    <H1>\n      {/* <Small>With</Small>{' '} */}\n      <A inline href=\"/\">\n        Mingjun Zhou's\n      </A>{' '}\n      <Small>tech stacks </Small>\n    </H1>\n    <Nav>\n      <A href=\"/\">Blog</A>\n      <A href=\"/about\">About</A>\n      <A href=\"https://github.com/zhoumingjun\">GitHub</A>\n    </Nav>\n  </Header>\n);\n\nexport default SiteHeader;\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from 'react';\nimport styled from 'react-emotion';\nimport A from './header-footer-anchor';\n\nconst Footer = styled.footer(({theme}) => ({\n  color: theme.textColor,\n  height: theme.headerHeight,\n  textTransform: 'uppercase',\n  textAlign: 'center',\n  opacity: 0.35,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n}));\n\nconst P = styled.p(({theme}) => ({\n  margin: `${theme.spacingPx / 2}px 0`,\n}));\n\nconst SiteFooter = () => (\n  <Footer>\n    <P>&copy; 2017-2018 Mingjun Zhou</P>\n    <P>\n      <small>\n        This site is built with{' '}\n        <A inline href=\"https://www.gatsbyjs.org/\">\n          GatsbyJS\n        </A>\n        . You can find the{' '}\n        <A\n          inline\n          href=\"https://github.com/zhoumingjun/zhoumingjun.github.io/tree/develop\">\n          source code on GitHub\n        </A>\n        .\n      </small>\n    </P>\n  </Footer>\n);\n\nexport default SiteFooter;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport {StaticQuery, graphql} from 'gatsby';\nimport {ThemeProvider} from 'emotion-theming';\nimport Header from './header';\nimport Footer from './footer';\nimport {rhythm, scale} from '../utils/typography';\nimport {injectGlobal} from 'emotion';\n\nconst minWidthPx = 680;\nconst maxWidthPx = 960;\nconst spacingPx = 10;\nconst textColor = '#333';\nconst accentColor = '#ab4642';\nconst specialColor = '#ff0000';\nconst theme = {\n  spacingPx,\n  spacing: `${spacingPx}px`,\n  textColor,\n  accentColor,\n  maxWidthPx,\n  minWidthPx,\n  specialColor,\n};\n\ninjectGlobal`\n  a {\n    text-decoration: none;\n    color: ${textColor};\n    transition: color 250ms linear;\n  }    \n\n  a:hover {\n    color: ${accentColor}\n  }\n\n  blockquote {\n    background: #F9F9F9;\n     margin: 0;\n  }\n`;\n\nconst Layout = ({children}) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={data => (\n      <ThemeProvider theme={theme}>\n        <div\n          css={`\n            margin-left: auto;\n            margin-right: auto;\n            max-width: ${rhythm(50)};\n            padding-top: ${rhythm(0.5)};\n          `}>\n          <Helmet>\n            <title>\n              {data.site.siteMetadata.title} &middot;{' '}\n              {data.site.siteMetadata.description}\n            </title>\n            <meta charSet=\"utf-8\" />\n            <meta\n              name=\"viewport\"\n              content=\"width=device-width, initial-scale=1\"\n            />\n            <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n            <meta name=\"HandheldFriendly\" content=\"True\" />\n            <meta\n              name=\"description\"\n              content={data.site.siteMetadata.description}\n            />\n          </Helmet>\n          <Header />\n          {children}\n          <Footer />\n        </div>\n      </ThemeProvider>\n    )}\n  />\n);\n\nexport default Layout;\n"],"sourceRoot":""}